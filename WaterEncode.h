#pragma once

#include <cstring>
#include <math.h>
#include <vector>
#include <iostream>
#include "AudioFile.h"
#include <complex>
#include "DTCWT_BAND.h"


#define sqrt2	0.707106781186548	//根号2分之1
typedef unsigned char   BYTE;


using namespace std;


class WaterEncode
{
public:
	WaterEncode();
	WaterEncode(int w_height, int w_width, double alpha, int h, int w);    //水印高 宽  水印强度  图像高 宽
	~WaterEncode();

	double m_intensity;
	int m_len; //帧长


	int sg0o;
	int sg1o;
	int sh0o;
	int sh1o;

	double g0o[19] = { 0.0000706263950892857, 0.0,                 -0.00134190150669643, -0.00188337053571429, 0.00715680803571429,
0.0238560267857143,   -0.0556431361607143,  -0.0516880580357143,   0.299757603236607,
0.559430803571429,     0.299757603236607,   -0.0516880580357143,  -0.0556431361607143,
0.0238560267857143,    0.00715680803571429, -0.00188337053571429, -0.00134190150669643,
0.0, 0.0000706263950892857 };

	double g1o[13] = { -0.00175781250000000, 0,                  0.0222656250000000, 0.0468750000000000, -0.0482421875000000,
	-0.296875000000000,   0.555468750000000, -0.296875000000000, -0.0482421875000000,
	0.0468750000000000,  0.0222656250000000, 0,                 -0.00175781250000000 };

	double h0o[13] = { -0.00175781250000000, 0,                  0.0222656250000000, -0.0468750000000000, -0.0482421875000000,
	0.296875000000000,   0.555468750000000,  0.296875000000000,  -0.0482421875000000,
	-0.0468750000000000,  0.0222656250000000, 0,                  -0.00175781250000000 };

	double h1o[19] = { -0.0000706263950892857, 0,                    0.00134190150669643, -0.00188337053571429, -0.00715680803571429,
	0.0238560267857143,    0.0556431361607143,  -0.0516880580357143,  -0.299757603236607,
	0.559430803571429,    -0.299757603236607,   -0.0516880580357143,   0.0556431361607143,
	0.0238560267857143,   -0.00715680803571429, -0.00188337053571429,  0.00134190150669643,
	0, -0.0000706263950892857 };
	//qshift_b
	double g0a[14] = { -0.00455689562847549, -0.00543947593727412, 0.0170252238815540, 0.0238253847949203,
	-0.106711804686665,    0.0118660920337970,  0.568810420712123,  0.756145643892523,
	0.275295384668882,   -0.117203887699115,  -0.0388728012688278, 0.0346603468448535,
	-0.00388321199915849,  0.00325314276365318 };

	double g0b[14] = { 0.00325314276365318, -0.00388321199915849, 0.0346603468448535, -0.0388728012688278,
	-0.117203887699115,    0.275295384668882,   0.756145643892523,   0.568810420712123,
	0.0118660920337970,  -0.106711804686665,   0.0238253847949203,  0.0170252238815540,
	-0.00543947593727412, -0.00455689562847549 };

	double g1a[14] = { -0.00325314276365318, -0.00388321199915849, -0.0346603468448535, -0.0388728012688278,
	0.117203887699115,    0.275295384668882,   -0.756145643892523,   0.568810420712123,
	-0.0118660920337970,  -0.106711804686665,   -0.0238253847949203,  0.0170252238815540,
	0.00543947593727412, -0.00455689562847549 };

	double g1b[14] = { -0.00455689562847549,  0.00543947593727412, 0.0170252238815540, -0.0238253847949203,
	-0.106711804686665,   -0.0118660920337970,  0.568810420712123,  -0.756145643892523,
	0.275295384668882,    0.117203887699115,  -0.0388728012688278, -0.0346603468448535,
	-0.00388321199915849, -0.00325314276365318 };

	double h0a[14] = { 0.00325314276365318, -0.00388321199915849, 0.0346603468448535, -0.0388728012688278,
	-0.117203887699115,    0.275295384668882,   0.756145643892523,   0.568810420712123,
	0.0118660920337970,  -0.106711804686665,   0.0238253847949203,  0.0170252238815540,
	-0.00543947593727412, -0.00455689562847549 };

	double h0b[14] = { -0.00455689562847549, -0.00543947593727412, 0.0170252238815540, 0.0238253847949203,
	-0.106711804686665,    0.0118660920337970,  0.568810420712123,  0.756145643892523,
	0.275295384668882,   -0.117203887699115,  -0.0388728012688278, 0.0346603468448535,
	-0.00388321199915849,  0.00325314276365318 };

	double h1a[14] = { -0.00455689562847549,  0.00543947593727412, 0.0170252238815540, -0.0238253847949203,
	-0.106711804686665,   -0.0118660920337970,  0.568810420712123,  -0.756145643892523,
	0.275295384668882,    0.117203887699115,  -0.0388728012688278, -0.0346603468448535,
	-0.00388321199915849, -0.00325314276365318 };

	double h1b[14] = { -0.00325314276365318, -0.00388321199915849, -0.0346603468448535, -0.0388728012688278,
	0.117203887699115,    0.275295384668882,   -0.756145643892523,   0.568810420712123,
	-0.0118660920337970,  -0.106711804686665,   -0.0238253847949203,  0.0170252238815540,
	0.00543947593727412, -0.00455689562847549 };

	void colfilter(vector<double>& X, int index, int H, string filt, int filtersize,
				   vector<double>& out, bool addflag);
	void coldfilt(vector<double>& M, int H,string filt1, string filt2,
				  vector<double>& out);
	void colifilt(vector<double>& X, int H, string filt1, string filt2,
				  vector<double>& out);
	DTCWT_BANDS* dtwavexfm_1d(vector<double>& X, int index, int len, int level);
	void dtwaveifm_1d(DTCWT_BANDS* bands, int H,  int level,
					 vector<double>& out, int index);
	void c2q1d(vector<complex<double>>& comp, vector<double>& res);


};

